#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_35 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                      Code generated with SymPy 1.10.1                      *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_2371134415192855578) {
   out_2371134415192855578[0] = 0;
   out_2371134415192855578[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_2371134415192855578[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_2371134415192855578[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_2371134415192855578[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_2371134415192855578[5] = -sin(in_vec[1]);
   out_2371134415192855578[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_2371134415192855578[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_2371134415192855578[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_2371134415192855578[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_2371134415192855578[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_2371134415192855578[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_2371134415192855578[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_2371134415192855578[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_2371134415192855578[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_2371134415192855578[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_2371134415192855578[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_2371134415192855578[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_8346643765801733285) {
   out_8346643765801733285[0] = delta_x[0] + nom_x[0];
   out_8346643765801733285[1] = delta_x[1] + nom_x[1];
   out_8346643765801733285[2] = delta_x[2] + nom_x[2];
   out_8346643765801733285[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_8346643765801733285[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_8346643765801733285[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_8346643765801733285[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_8346643765801733285[7] = delta_x[6] + nom_x[7];
   out_8346643765801733285[8] = delta_x[7] + nom_x[8];
   out_8346643765801733285[9] = delta_x[8] + nom_x[9];
   out_8346643765801733285[10] = delta_x[9] + nom_x[10];
   out_8346643765801733285[11] = delta_x[10] + nom_x[11];
   out_8346643765801733285[12] = delta_x[11] + nom_x[12];
   out_8346643765801733285[13] = delta_x[12] + nom_x[13];
   out_8346643765801733285[14] = delta_x[13] + nom_x[14];
   out_8346643765801733285[15] = delta_x[14] + nom_x[15];
   out_8346643765801733285[16] = delta_x[15] + nom_x[16];
   out_8346643765801733285[17] = delta_x[16] + nom_x[17];
   out_8346643765801733285[18] = delta_x[17] + nom_x[18];
   out_8346643765801733285[19] = delta_x[18] + nom_x[19];
   out_8346643765801733285[20] = delta_x[19] + nom_x[20];
   out_8346643765801733285[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_7659926232156838011) {
   out_7659926232156838011[0] = -nom_x[0] + true_x[0];
   out_7659926232156838011[1] = -nom_x[1] + true_x[1];
   out_7659926232156838011[2] = -nom_x[2] + true_x[2];
   out_7659926232156838011[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_7659926232156838011[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_7659926232156838011[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_7659926232156838011[6] = -nom_x[7] + true_x[7];
   out_7659926232156838011[7] = -nom_x[8] + true_x[8];
   out_7659926232156838011[8] = -nom_x[9] + true_x[9];
   out_7659926232156838011[9] = -nom_x[10] + true_x[10];
   out_7659926232156838011[10] = -nom_x[11] + true_x[11];
   out_7659926232156838011[11] = -nom_x[12] + true_x[12];
   out_7659926232156838011[12] = -nom_x[13] + true_x[13];
   out_7659926232156838011[13] = -nom_x[14] + true_x[14];
   out_7659926232156838011[14] = -nom_x[15] + true_x[15];
   out_7659926232156838011[15] = -nom_x[16] + true_x[16];
   out_7659926232156838011[16] = -nom_x[17] + true_x[17];
   out_7659926232156838011[17] = -nom_x[18] + true_x[18];
   out_7659926232156838011[18] = -nom_x[19] + true_x[19];
   out_7659926232156838011[19] = -nom_x[20] + true_x[20];
   out_7659926232156838011[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_2316424480753417441) {
   out_2316424480753417441[0] = 1.0;
   out_2316424480753417441[1] = 0;
   out_2316424480753417441[2] = 0;
   out_2316424480753417441[3] = 0;
   out_2316424480753417441[4] = 0;
   out_2316424480753417441[5] = 0;
   out_2316424480753417441[6] = 0;
   out_2316424480753417441[7] = 0;
   out_2316424480753417441[8] = 0;
   out_2316424480753417441[9] = 0;
   out_2316424480753417441[10] = 0;
   out_2316424480753417441[11] = 0;
   out_2316424480753417441[12] = 0;
   out_2316424480753417441[13] = 0;
   out_2316424480753417441[14] = 0;
   out_2316424480753417441[15] = 0;
   out_2316424480753417441[16] = 0;
   out_2316424480753417441[17] = 0;
   out_2316424480753417441[18] = 0;
   out_2316424480753417441[19] = 0;
   out_2316424480753417441[20] = 0;
   out_2316424480753417441[21] = 0;
   out_2316424480753417441[22] = 1.0;
   out_2316424480753417441[23] = 0;
   out_2316424480753417441[24] = 0;
   out_2316424480753417441[25] = 0;
   out_2316424480753417441[26] = 0;
   out_2316424480753417441[27] = 0;
   out_2316424480753417441[28] = 0;
   out_2316424480753417441[29] = 0;
   out_2316424480753417441[30] = 0;
   out_2316424480753417441[31] = 0;
   out_2316424480753417441[32] = 0;
   out_2316424480753417441[33] = 0;
   out_2316424480753417441[34] = 0;
   out_2316424480753417441[35] = 0;
   out_2316424480753417441[36] = 0;
   out_2316424480753417441[37] = 0;
   out_2316424480753417441[38] = 0;
   out_2316424480753417441[39] = 0;
   out_2316424480753417441[40] = 0;
   out_2316424480753417441[41] = 0;
   out_2316424480753417441[42] = 0;
   out_2316424480753417441[43] = 0;
   out_2316424480753417441[44] = 1.0;
   out_2316424480753417441[45] = 0;
   out_2316424480753417441[46] = 0;
   out_2316424480753417441[47] = 0;
   out_2316424480753417441[48] = 0;
   out_2316424480753417441[49] = 0;
   out_2316424480753417441[50] = 0;
   out_2316424480753417441[51] = 0;
   out_2316424480753417441[52] = 0;
   out_2316424480753417441[53] = 0;
   out_2316424480753417441[54] = 0;
   out_2316424480753417441[55] = 0;
   out_2316424480753417441[56] = 0;
   out_2316424480753417441[57] = 0;
   out_2316424480753417441[58] = 0;
   out_2316424480753417441[59] = 0;
   out_2316424480753417441[60] = 0;
   out_2316424480753417441[61] = 0;
   out_2316424480753417441[62] = 0;
   out_2316424480753417441[63] = 0;
   out_2316424480753417441[64] = 0;
   out_2316424480753417441[65] = 0;
   out_2316424480753417441[66] = -0.5*state[4];
   out_2316424480753417441[67] = -0.5*state[5];
   out_2316424480753417441[68] = -0.5*state[6];
   out_2316424480753417441[69] = 0;
   out_2316424480753417441[70] = 0;
   out_2316424480753417441[71] = 0;
   out_2316424480753417441[72] = 0;
   out_2316424480753417441[73] = 0;
   out_2316424480753417441[74] = 0;
   out_2316424480753417441[75] = 0;
   out_2316424480753417441[76] = 0;
   out_2316424480753417441[77] = 0;
   out_2316424480753417441[78] = 0;
   out_2316424480753417441[79] = 0;
   out_2316424480753417441[80] = 0;
   out_2316424480753417441[81] = 0;
   out_2316424480753417441[82] = 0;
   out_2316424480753417441[83] = 0;
   out_2316424480753417441[84] = 0;
   out_2316424480753417441[85] = 0;
   out_2316424480753417441[86] = 0;
   out_2316424480753417441[87] = 0.5*state[3];
   out_2316424480753417441[88] = 0.5*state[6];
   out_2316424480753417441[89] = -0.5*state[5];
   out_2316424480753417441[90] = 0;
   out_2316424480753417441[91] = 0;
   out_2316424480753417441[92] = 0;
   out_2316424480753417441[93] = 0;
   out_2316424480753417441[94] = 0;
   out_2316424480753417441[95] = 0;
   out_2316424480753417441[96] = 0;
   out_2316424480753417441[97] = 0;
   out_2316424480753417441[98] = 0;
   out_2316424480753417441[99] = 0;
   out_2316424480753417441[100] = 0;
   out_2316424480753417441[101] = 0;
   out_2316424480753417441[102] = 0;
   out_2316424480753417441[103] = 0;
   out_2316424480753417441[104] = 0;
   out_2316424480753417441[105] = 0;
   out_2316424480753417441[106] = 0;
   out_2316424480753417441[107] = 0;
   out_2316424480753417441[108] = -0.5*state[6];
   out_2316424480753417441[109] = 0.5*state[3];
   out_2316424480753417441[110] = 0.5*state[4];
   out_2316424480753417441[111] = 0;
   out_2316424480753417441[112] = 0;
   out_2316424480753417441[113] = 0;
   out_2316424480753417441[114] = 0;
   out_2316424480753417441[115] = 0;
   out_2316424480753417441[116] = 0;
   out_2316424480753417441[117] = 0;
   out_2316424480753417441[118] = 0;
   out_2316424480753417441[119] = 0;
   out_2316424480753417441[120] = 0;
   out_2316424480753417441[121] = 0;
   out_2316424480753417441[122] = 0;
   out_2316424480753417441[123] = 0;
   out_2316424480753417441[124] = 0;
   out_2316424480753417441[125] = 0;
   out_2316424480753417441[126] = 0;
   out_2316424480753417441[127] = 0;
   out_2316424480753417441[128] = 0;
   out_2316424480753417441[129] = 0.5*state[5];
   out_2316424480753417441[130] = -0.5*state[4];
   out_2316424480753417441[131] = 0.5*state[3];
   out_2316424480753417441[132] = 0;
   out_2316424480753417441[133] = 0;
   out_2316424480753417441[134] = 0;
   out_2316424480753417441[135] = 0;
   out_2316424480753417441[136] = 0;
   out_2316424480753417441[137] = 0;
   out_2316424480753417441[138] = 0;
   out_2316424480753417441[139] = 0;
   out_2316424480753417441[140] = 0;
   out_2316424480753417441[141] = 0;
   out_2316424480753417441[142] = 0;
   out_2316424480753417441[143] = 0;
   out_2316424480753417441[144] = 0;
   out_2316424480753417441[145] = 0;
   out_2316424480753417441[146] = 0;
   out_2316424480753417441[147] = 0;
   out_2316424480753417441[148] = 0;
   out_2316424480753417441[149] = 0;
   out_2316424480753417441[150] = 0;
   out_2316424480753417441[151] = 0;
   out_2316424480753417441[152] = 0;
   out_2316424480753417441[153] = 1.0;
   out_2316424480753417441[154] = 0;
   out_2316424480753417441[155] = 0;
   out_2316424480753417441[156] = 0;
   out_2316424480753417441[157] = 0;
   out_2316424480753417441[158] = 0;
   out_2316424480753417441[159] = 0;
   out_2316424480753417441[160] = 0;
   out_2316424480753417441[161] = 0;
   out_2316424480753417441[162] = 0;
   out_2316424480753417441[163] = 0;
   out_2316424480753417441[164] = 0;
   out_2316424480753417441[165] = 0;
   out_2316424480753417441[166] = 0;
   out_2316424480753417441[167] = 0;
   out_2316424480753417441[168] = 0;
   out_2316424480753417441[169] = 0;
   out_2316424480753417441[170] = 0;
   out_2316424480753417441[171] = 0;
   out_2316424480753417441[172] = 0;
   out_2316424480753417441[173] = 0;
   out_2316424480753417441[174] = 0;
   out_2316424480753417441[175] = 1.0;
   out_2316424480753417441[176] = 0;
   out_2316424480753417441[177] = 0;
   out_2316424480753417441[178] = 0;
   out_2316424480753417441[179] = 0;
   out_2316424480753417441[180] = 0;
   out_2316424480753417441[181] = 0;
   out_2316424480753417441[182] = 0;
   out_2316424480753417441[183] = 0;
   out_2316424480753417441[184] = 0;
   out_2316424480753417441[185] = 0;
   out_2316424480753417441[186] = 0;
   out_2316424480753417441[187] = 0;
   out_2316424480753417441[188] = 0;
   out_2316424480753417441[189] = 0;
   out_2316424480753417441[190] = 0;
   out_2316424480753417441[191] = 0;
   out_2316424480753417441[192] = 0;
   out_2316424480753417441[193] = 0;
   out_2316424480753417441[194] = 0;
   out_2316424480753417441[195] = 0;
   out_2316424480753417441[196] = 0;
   out_2316424480753417441[197] = 1.0;
   out_2316424480753417441[198] = 0;
   out_2316424480753417441[199] = 0;
   out_2316424480753417441[200] = 0;
   out_2316424480753417441[201] = 0;
   out_2316424480753417441[202] = 0;
   out_2316424480753417441[203] = 0;
   out_2316424480753417441[204] = 0;
   out_2316424480753417441[205] = 0;
   out_2316424480753417441[206] = 0;
   out_2316424480753417441[207] = 0;
   out_2316424480753417441[208] = 0;
   out_2316424480753417441[209] = 0;
   out_2316424480753417441[210] = 0;
   out_2316424480753417441[211] = 0;
   out_2316424480753417441[212] = 0;
   out_2316424480753417441[213] = 0;
   out_2316424480753417441[214] = 0;
   out_2316424480753417441[215] = 0;
   out_2316424480753417441[216] = 0;
   out_2316424480753417441[217] = 0;
   out_2316424480753417441[218] = 0;
   out_2316424480753417441[219] = 1.0;
   out_2316424480753417441[220] = 0;
   out_2316424480753417441[221] = 0;
   out_2316424480753417441[222] = 0;
   out_2316424480753417441[223] = 0;
   out_2316424480753417441[224] = 0;
   out_2316424480753417441[225] = 0;
   out_2316424480753417441[226] = 0;
   out_2316424480753417441[227] = 0;
   out_2316424480753417441[228] = 0;
   out_2316424480753417441[229] = 0;
   out_2316424480753417441[230] = 0;
   out_2316424480753417441[231] = 0;
   out_2316424480753417441[232] = 0;
   out_2316424480753417441[233] = 0;
   out_2316424480753417441[234] = 0;
   out_2316424480753417441[235] = 0;
   out_2316424480753417441[236] = 0;
   out_2316424480753417441[237] = 0;
   out_2316424480753417441[238] = 0;
   out_2316424480753417441[239] = 0;
   out_2316424480753417441[240] = 0;
   out_2316424480753417441[241] = 1.0;
   out_2316424480753417441[242] = 0;
   out_2316424480753417441[243] = 0;
   out_2316424480753417441[244] = 0;
   out_2316424480753417441[245] = 0;
   out_2316424480753417441[246] = 0;
   out_2316424480753417441[247] = 0;
   out_2316424480753417441[248] = 0;
   out_2316424480753417441[249] = 0;
   out_2316424480753417441[250] = 0;
   out_2316424480753417441[251] = 0;
   out_2316424480753417441[252] = 0;
   out_2316424480753417441[253] = 0;
   out_2316424480753417441[254] = 0;
   out_2316424480753417441[255] = 0;
   out_2316424480753417441[256] = 0;
   out_2316424480753417441[257] = 0;
   out_2316424480753417441[258] = 0;
   out_2316424480753417441[259] = 0;
   out_2316424480753417441[260] = 0;
   out_2316424480753417441[261] = 0;
   out_2316424480753417441[262] = 0;
   out_2316424480753417441[263] = 1.0;
   out_2316424480753417441[264] = 0;
   out_2316424480753417441[265] = 0;
   out_2316424480753417441[266] = 0;
   out_2316424480753417441[267] = 0;
   out_2316424480753417441[268] = 0;
   out_2316424480753417441[269] = 0;
   out_2316424480753417441[270] = 0;
   out_2316424480753417441[271] = 0;
   out_2316424480753417441[272] = 0;
   out_2316424480753417441[273] = 0;
   out_2316424480753417441[274] = 0;
   out_2316424480753417441[275] = 0;
   out_2316424480753417441[276] = 0;
   out_2316424480753417441[277] = 0;
   out_2316424480753417441[278] = 0;
   out_2316424480753417441[279] = 0;
   out_2316424480753417441[280] = 0;
   out_2316424480753417441[281] = 0;
   out_2316424480753417441[282] = 0;
   out_2316424480753417441[283] = 0;
   out_2316424480753417441[284] = 0;
   out_2316424480753417441[285] = 1.0;
   out_2316424480753417441[286] = 0;
   out_2316424480753417441[287] = 0;
   out_2316424480753417441[288] = 0;
   out_2316424480753417441[289] = 0;
   out_2316424480753417441[290] = 0;
   out_2316424480753417441[291] = 0;
   out_2316424480753417441[292] = 0;
   out_2316424480753417441[293] = 0;
   out_2316424480753417441[294] = 0;
   out_2316424480753417441[295] = 0;
   out_2316424480753417441[296] = 0;
   out_2316424480753417441[297] = 0;
   out_2316424480753417441[298] = 0;
   out_2316424480753417441[299] = 0;
   out_2316424480753417441[300] = 0;
   out_2316424480753417441[301] = 0;
   out_2316424480753417441[302] = 0;
   out_2316424480753417441[303] = 0;
   out_2316424480753417441[304] = 0;
   out_2316424480753417441[305] = 0;
   out_2316424480753417441[306] = 0;
   out_2316424480753417441[307] = 1.0;
   out_2316424480753417441[308] = 0;
   out_2316424480753417441[309] = 0;
   out_2316424480753417441[310] = 0;
   out_2316424480753417441[311] = 0;
   out_2316424480753417441[312] = 0;
   out_2316424480753417441[313] = 0;
   out_2316424480753417441[314] = 0;
   out_2316424480753417441[315] = 0;
   out_2316424480753417441[316] = 0;
   out_2316424480753417441[317] = 0;
   out_2316424480753417441[318] = 0;
   out_2316424480753417441[319] = 0;
   out_2316424480753417441[320] = 0;
   out_2316424480753417441[321] = 0;
   out_2316424480753417441[322] = 0;
   out_2316424480753417441[323] = 0;
   out_2316424480753417441[324] = 0;
   out_2316424480753417441[325] = 0;
   out_2316424480753417441[326] = 0;
   out_2316424480753417441[327] = 0;
   out_2316424480753417441[328] = 0;
   out_2316424480753417441[329] = 1.0;
   out_2316424480753417441[330] = 0;
   out_2316424480753417441[331] = 0;
   out_2316424480753417441[332] = 0;
   out_2316424480753417441[333] = 0;
   out_2316424480753417441[334] = 0;
   out_2316424480753417441[335] = 0;
   out_2316424480753417441[336] = 0;
   out_2316424480753417441[337] = 0;
   out_2316424480753417441[338] = 0;
   out_2316424480753417441[339] = 0;
   out_2316424480753417441[340] = 0;
   out_2316424480753417441[341] = 0;
   out_2316424480753417441[342] = 0;
   out_2316424480753417441[343] = 0;
   out_2316424480753417441[344] = 0;
   out_2316424480753417441[345] = 0;
   out_2316424480753417441[346] = 0;
   out_2316424480753417441[347] = 0;
   out_2316424480753417441[348] = 0;
   out_2316424480753417441[349] = 0;
   out_2316424480753417441[350] = 0;
   out_2316424480753417441[351] = 1.0;
   out_2316424480753417441[352] = 0;
   out_2316424480753417441[353] = 0;
   out_2316424480753417441[354] = 0;
   out_2316424480753417441[355] = 0;
   out_2316424480753417441[356] = 0;
   out_2316424480753417441[357] = 0;
   out_2316424480753417441[358] = 0;
   out_2316424480753417441[359] = 0;
   out_2316424480753417441[360] = 0;
   out_2316424480753417441[361] = 0;
   out_2316424480753417441[362] = 0;
   out_2316424480753417441[363] = 0;
   out_2316424480753417441[364] = 0;
   out_2316424480753417441[365] = 0;
   out_2316424480753417441[366] = 0;
   out_2316424480753417441[367] = 0;
   out_2316424480753417441[368] = 0;
   out_2316424480753417441[369] = 0;
   out_2316424480753417441[370] = 0;
   out_2316424480753417441[371] = 0;
   out_2316424480753417441[372] = 0;
   out_2316424480753417441[373] = 1.0;
   out_2316424480753417441[374] = 0;
   out_2316424480753417441[375] = 0;
   out_2316424480753417441[376] = 0;
   out_2316424480753417441[377] = 0;
   out_2316424480753417441[378] = 0;
   out_2316424480753417441[379] = 0;
   out_2316424480753417441[380] = 0;
   out_2316424480753417441[381] = 0;
   out_2316424480753417441[382] = 0;
   out_2316424480753417441[383] = 0;
   out_2316424480753417441[384] = 0;
   out_2316424480753417441[385] = 0;
   out_2316424480753417441[386] = 0;
   out_2316424480753417441[387] = 0;
   out_2316424480753417441[388] = 0;
   out_2316424480753417441[389] = 0;
   out_2316424480753417441[390] = 0;
   out_2316424480753417441[391] = 0;
   out_2316424480753417441[392] = 0;
   out_2316424480753417441[393] = 0;
   out_2316424480753417441[394] = 0;
   out_2316424480753417441[395] = 1.0;
   out_2316424480753417441[396] = 0;
   out_2316424480753417441[397] = 0;
   out_2316424480753417441[398] = 0;
   out_2316424480753417441[399] = 0;
   out_2316424480753417441[400] = 0;
   out_2316424480753417441[401] = 0;
   out_2316424480753417441[402] = 0;
   out_2316424480753417441[403] = 0;
   out_2316424480753417441[404] = 0;
   out_2316424480753417441[405] = 0;
   out_2316424480753417441[406] = 0;
   out_2316424480753417441[407] = 0;
   out_2316424480753417441[408] = 0;
   out_2316424480753417441[409] = 0;
   out_2316424480753417441[410] = 0;
   out_2316424480753417441[411] = 0;
   out_2316424480753417441[412] = 0;
   out_2316424480753417441[413] = 0;
   out_2316424480753417441[414] = 0;
   out_2316424480753417441[415] = 0;
   out_2316424480753417441[416] = 0;
   out_2316424480753417441[417] = 1.0;
   out_2316424480753417441[418] = 0;
   out_2316424480753417441[419] = 0;
   out_2316424480753417441[420] = 0;
   out_2316424480753417441[421] = 0;
   out_2316424480753417441[422] = 0;
   out_2316424480753417441[423] = 0;
   out_2316424480753417441[424] = 0;
   out_2316424480753417441[425] = 0;
   out_2316424480753417441[426] = 0;
   out_2316424480753417441[427] = 0;
   out_2316424480753417441[428] = 0;
   out_2316424480753417441[429] = 0;
   out_2316424480753417441[430] = 0;
   out_2316424480753417441[431] = 0;
   out_2316424480753417441[432] = 0;
   out_2316424480753417441[433] = 0;
   out_2316424480753417441[434] = 0;
   out_2316424480753417441[435] = 0;
   out_2316424480753417441[436] = 0;
   out_2316424480753417441[437] = 0;
   out_2316424480753417441[438] = 0;
   out_2316424480753417441[439] = 1.0;
   out_2316424480753417441[440] = 0;
   out_2316424480753417441[441] = 0;
   out_2316424480753417441[442] = 0;
   out_2316424480753417441[443] = 0;
   out_2316424480753417441[444] = 0;
   out_2316424480753417441[445] = 0;
   out_2316424480753417441[446] = 0;
   out_2316424480753417441[447] = 0;
   out_2316424480753417441[448] = 0;
   out_2316424480753417441[449] = 0;
   out_2316424480753417441[450] = 0;
   out_2316424480753417441[451] = 0;
   out_2316424480753417441[452] = 0;
   out_2316424480753417441[453] = 0;
   out_2316424480753417441[454] = 0;
   out_2316424480753417441[455] = 0;
   out_2316424480753417441[456] = 0;
   out_2316424480753417441[457] = 0;
   out_2316424480753417441[458] = 0;
   out_2316424480753417441[459] = 0;
   out_2316424480753417441[460] = 0;
   out_2316424480753417441[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_4391588121978318731) {
   out_4391588121978318731[0] = dt*state[7] + state[0];
   out_4391588121978318731[1] = dt*state[8] + state[1];
   out_4391588121978318731[2] = dt*state[9] + state[2];
   out_4391588121978318731[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_4391588121978318731[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_4391588121978318731[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_4391588121978318731[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_4391588121978318731[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_4391588121978318731[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_4391588121978318731[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_4391588121978318731[10] = state[10];
   out_4391588121978318731[11] = state[11];
   out_4391588121978318731[12] = state[12];
   out_4391588121978318731[13] = state[13];
   out_4391588121978318731[14] = state[14];
   out_4391588121978318731[15] = state[15];
   out_4391588121978318731[16] = state[16];
   out_4391588121978318731[17] = state[17];
   out_4391588121978318731[18] = state[18];
   out_4391588121978318731[19] = state[19];
   out_4391588121978318731[20] = state[20];
   out_4391588121978318731[21] = state[21];
}
void F_fun(double *state, double dt, double *out_1171520194403940403) {
   out_1171520194403940403[0] = 1;
   out_1171520194403940403[1] = 0;
   out_1171520194403940403[2] = 0;
   out_1171520194403940403[3] = 0;
   out_1171520194403940403[4] = 0;
   out_1171520194403940403[5] = 0;
   out_1171520194403940403[6] = dt;
   out_1171520194403940403[7] = 0;
   out_1171520194403940403[8] = 0;
   out_1171520194403940403[9] = 0;
   out_1171520194403940403[10] = 0;
   out_1171520194403940403[11] = 0;
   out_1171520194403940403[12] = 0;
   out_1171520194403940403[13] = 0;
   out_1171520194403940403[14] = 0;
   out_1171520194403940403[15] = 0;
   out_1171520194403940403[16] = 0;
   out_1171520194403940403[17] = 0;
   out_1171520194403940403[18] = 0;
   out_1171520194403940403[19] = 0;
   out_1171520194403940403[20] = 0;
   out_1171520194403940403[21] = 0;
   out_1171520194403940403[22] = 1;
   out_1171520194403940403[23] = 0;
   out_1171520194403940403[24] = 0;
   out_1171520194403940403[25] = 0;
   out_1171520194403940403[26] = 0;
   out_1171520194403940403[27] = 0;
   out_1171520194403940403[28] = dt;
   out_1171520194403940403[29] = 0;
   out_1171520194403940403[30] = 0;
   out_1171520194403940403[31] = 0;
   out_1171520194403940403[32] = 0;
   out_1171520194403940403[33] = 0;
   out_1171520194403940403[34] = 0;
   out_1171520194403940403[35] = 0;
   out_1171520194403940403[36] = 0;
   out_1171520194403940403[37] = 0;
   out_1171520194403940403[38] = 0;
   out_1171520194403940403[39] = 0;
   out_1171520194403940403[40] = 0;
   out_1171520194403940403[41] = 0;
   out_1171520194403940403[42] = 0;
   out_1171520194403940403[43] = 0;
   out_1171520194403940403[44] = 1;
   out_1171520194403940403[45] = 0;
   out_1171520194403940403[46] = 0;
   out_1171520194403940403[47] = 0;
   out_1171520194403940403[48] = 0;
   out_1171520194403940403[49] = 0;
   out_1171520194403940403[50] = dt;
   out_1171520194403940403[51] = 0;
   out_1171520194403940403[52] = 0;
   out_1171520194403940403[53] = 0;
   out_1171520194403940403[54] = 0;
   out_1171520194403940403[55] = 0;
   out_1171520194403940403[56] = 0;
   out_1171520194403940403[57] = 0;
   out_1171520194403940403[58] = 0;
   out_1171520194403940403[59] = 0;
   out_1171520194403940403[60] = 0;
   out_1171520194403940403[61] = 0;
   out_1171520194403940403[62] = 0;
   out_1171520194403940403[63] = 0;
   out_1171520194403940403[64] = 0;
   out_1171520194403940403[65] = 0;
   out_1171520194403940403[66] = 1;
   out_1171520194403940403[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_1171520194403940403[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_1171520194403940403[69] = 0;
   out_1171520194403940403[70] = 0;
   out_1171520194403940403[71] = 0;
   out_1171520194403940403[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_1171520194403940403[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_1171520194403940403[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_1171520194403940403[75] = 0;
   out_1171520194403940403[76] = 0;
   out_1171520194403940403[77] = 0;
   out_1171520194403940403[78] = 0;
   out_1171520194403940403[79] = 0;
   out_1171520194403940403[80] = 0;
   out_1171520194403940403[81] = 0;
   out_1171520194403940403[82] = 0;
   out_1171520194403940403[83] = 0;
   out_1171520194403940403[84] = 0;
   out_1171520194403940403[85] = 0;
   out_1171520194403940403[86] = 0;
   out_1171520194403940403[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_1171520194403940403[88] = 1;
   out_1171520194403940403[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_1171520194403940403[90] = 0;
   out_1171520194403940403[91] = 0;
   out_1171520194403940403[92] = 0;
   out_1171520194403940403[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_1171520194403940403[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_1171520194403940403[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_1171520194403940403[96] = 0;
   out_1171520194403940403[97] = 0;
   out_1171520194403940403[98] = 0;
   out_1171520194403940403[99] = 0;
   out_1171520194403940403[100] = 0;
   out_1171520194403940403[101] = 0;
   out_1171520194403940403[102] = 0;
   out_1171520194403940403[103] = 0;
   out_1171520194403940403[104] = 0;
   out_1171520194403940403[105] = 0;
   out_1171520194403940403[106] = 0;
   out_1171520194403940403[107] = 0;
   out_1171520194403940403[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_1171520194403940403[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_1171520194403940403[110] = 1;
   out_1171520194403940403[111] = 0;
   out_1171520194403940403[112] = 0;
   out_1171520194403940403[113] = 0;
   out_1171520194403940403[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_1171520194403940403[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_1171520194403940403[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_1171520194403940403[117] = 0;
   out_1171520194403940403[118] = 0;
   out_1171520194403940403[119] = 0;
   out_1171520194403940403[120] = 0;
   out_1171520194403940403[121] = 0;
   out_1171520194403940403[122] = 0;
   out_1171520194403940403[123] = 0;
   out_1171520194403940403[124] = 0;
   out_1171520194403940403[125] = 0;
   out_1171520194403940403[126] = 0;
   out_1171520194403940403[127] = 0;
   out_1171520194403940403[128] = 0;
   out_1171520194403940403[129] = 0;
   out_1171520194403940403[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_1171520194403940403[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_1171520194403940403[132] = 1;
   out_1171520194403940403[133] = 0;
   out_1171520194403940403[134] = 0;
   out_1171520194403940403[135] = 0;
   out_1171520194403940403[136] = 0;
   out_1171520194403940403[137] = 0;
   out_1171520194403940403[138] = 0;
   out_1171520194403940403[139] = 0;
   out_1171520194403940403[140] = 0;
   out_1171520194403940403[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_1171520194403940403[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_1171520194403940403[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_1171520194403940403[144] = 0;
   out_1171520194403940403[145] = 0;
   out_1171520194403940403[146] = 0;
   out_1171520194403940403[147] = 0;
   out_1171520194403940403[148] = 0;
   out_1171520194403940403[149] = 0;
   out_1171520194403940403[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_1171520194403940403[151] = 0;
   out_1171520194403940403[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_1171520194403940403[153] = 0;
   out_1171520194403940403[154] = 1;
   out_1171520194403940403[155] = 0;
   out_1171520194403940403[156] = 0;
   out_1171520194403940403[157] = 0;
   out_1171520194403940403[158] = 0;
   out_1171520194403940403[159] = 0;
   out_1171520194403940403[160] = 0;
   out_1171520194403940403[161] = 0;
   out_1171520194403940403[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_1171520194403940403[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_1171520194403940403[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_1171520194403940403[165] = 0;
   out_1171520194403940403[166] = 0;
   out_1171520194403940403[167] = 0;
   out_1171520194403940403[168] = 0;
   out_1171520194403940403[169] = 0;
   out_1171520194403940403[170] = 0;
   out_1171520194403940403[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_1171520194403940403[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_1171520194403940403[173] = 0;
   out_1171520194403940403[174] = 0;
   out_1171520194403940403[175] = 0;
   out_1171520194403940403[176] = 1;
   out_1171520194403940403[177] = 0;
   out_1171520194403940403[178] = 0;
   out_1171520194403940403[179] = 0;
   out_1171520194403940403[180] = 0;
   out_1171520194403940403[181] = 0;
   out_1171520194403940403[182] = 0;
   out_1171520194403940403[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_1171520194403940403[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_1171520194403940403[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_1171520194403940403[186] = 0;
   out_1171520194403940403[187] = 0;
   out_1171520194403940403[188] = 0;
   out_1171520194403940403[189] = 0;
   out_1171520194403940403[190] = 0;
   out_1171520194403940403[191] = 0;
   out_1171520194403940403[192] = 0;
   out_1171520194403940403[193] = 0;
   out_1171520194403940403[194] = 0;
   out_1171520194403940403[195] = 0;
   out_1171520194403940403[196] = 0;
   out_1171520194403940403[197] = 0;
   out_1171520194403940403[198] = 1;
   out_1171520194403940403[199] = 0;
   out_1171520194403940403[200] = 0;
   out_1171520194403940403[201] = 0;
   out_1171520194403940403[202] = 0;
   out_1171520194403940403[203] = 0;
   out_1171520194403940403[204] = 0;
   out_1171520194403940403[205] = 0;
   out_1171520194403940403[206] = 0;
   out_1171520194403940403[207] = 0;
   out_1171520194403940403[208] = 0;
   out_1171520194403940403[209] = 0;
   out_1171520194403940403[210] = 0;
   out_1171520194403940403[211] = 0;
   out_1171520194403940403[212] = 0;
   out_1171520194403940403[213] = 0;
   out_1171520194403940403[214] = 0;
   out_1171520194403940403[215] = 0;
   out_1171520194403940403[216] = 0;
   out_1171520194403940403[217] = 0;
   out_1171520194403940403[218] = 0;
   out_1171520194403940403[219] = 0;
   out_1171520194403940403[220] = 1;
   out_1171520194403940403[221] = 0;
   out_1171520194403940403[222] = 0;
   out_1171520194403940403[223] = 0;
   out_1171520194403940403[224] = 0;
   out_1171520194403940403[225] = 0;
   out_1171520194403940403[226] = 0;
   out_1171520194403940403[227] = 0;
   out_1171520194403940403[228] = 0;
   out_1171520194403940403[229] = 0;
   out_1171520194403940403[230] = 0;
   out_1171520194403940403[231] = 0;
   out_1171520194403940403[232] = 0;
   out_1171520194403940403[233] = 0;
   out_1171520194403940403[234] = 0;
   out_1171520194403940403[235] = 0;
   out_1171520194403940403[236] = 0;
   out_1171520194403940403[237] = 0;
   out_1171520194403940403[238] = 0;
   out_1171520194403940403[239] = 0;
   out_1171520194403940403[240] = 0;
   out_1171520194403940403[241] = 0;
   out_1171520194403940403[242] = 1;
   out_1171520194403940403[243] = 0;
   out_1171520194403940403[244] = 0;
   out_1171520194403940403[245] = 0;
   out_1171520194403940403[246] = 0;
   out_1171520194403940403[247] = 0;
   out_1171520194403940403[248] = 0;
   out_1171520194403940403[249] = 0;
   out_1171520194403940403[250] = 0;
   out_1171520194403940403[251] = 0;
   out_1171520194403940403[252] = 0;
   out_1171520194403940403[253] = 0;
   out_1171520194403940403[254] = 0;
   out_1171520194403940403[255] = 0;
   out_1171520194403940403[256] = 0;
   out_1171520194403940403[257] = 0;
   out_1171520194403940403[258] = 0;
   out_1171520194403940403[259] = 0;
   out_1171520194403940403[260] = 0;
   out_1171520194403940403[261] = 0;
   out_1171520194403940403[262] = 0;
   out_1171520194403940403[263] = 0;
   out_1171520194403940403[264] = 1;
   out_1171520194403940403[265] = 0;
   out_1171520194403940403[266] = 0;
   out_1171520194403940403[267] = 0;
   out_1171520194403940403[268] = 0;
   out_1171520194403940403[269] = 0;
   out_1171520194403940403[270] = 0;
   out_1171520194403940403[271] = 0;
   out_1171520194403940403[272] = 0;
   out_1171520194403940403[273] = 0;
   out_1171520194403940403[274] = 0;
   out_1171520194403940403[275] = 0;
   out_1171520194403940403[276] = 0;
   out_1171520194403940403[277] = 0;
   out_1171520194403940403[278] = 0;
   out_1171520194403940403[279] = 0;
   out_1171520194403940403[280] = 0;
   out_1171520194403940403[281] = 0;
   out_1171520194403940403[282] = 0;
   out_1171520194403940403[283] = 0;
   out_1171520194403940403[284] = 0;
   out_1171520194403940403[285] = 0;
   out_1171520194403940403[286] = 1;
   out_1171520194403940403[287] = 0;
   out_1171520194403940403[288] = 0;
   out_1171520194403940403[289] = 0;
   out_1171520194403940403[290] = 0;
   out_1171520194403940403[291] = 0;
   out_1171520194403940403[292] = 0;
   out_1171520194403940403[293] = 0;
   out_1171520194403940403[294] = 0;
   out_1171520194403940403[295] = 0;
   out_1171520194403940403[296] = 0;
   out_1171520194403940403[297] = 0;
   out_1171520194403940403[298] = 0;
   out_1171520194403940403[299] = 0;
   out_1171520194403940403[300] = 0;
   out_1171520194403940403[301] = 0;
   out_1171520194403940403[302] = 0;
   out_1171520194403940403[303] = 0;
   out_1171520194403940403[304] = 0;
   out_1171520194403940403[305] = 0;
   out_1171520194403940403[306] = 0;
   out_1171520194403940403[307] = 0;
   out_1171520194403940403[308] = 1;
   out_1171520194403940403[309] = 0;
   out_1171520194403940403[310] = 0;
   out_1171520194403940403[311] = 0;
   out_1171520194403940403[312] = 0;
   out_1171520194403940403[313] = 0;
   out_1171520194403940403[314] = 0;
   out_1171520194403940403[315] = 0;
   out_1171520194403940403[316] = 0;
   out_1171520194403940403[317] = 0;
   out_1171520194403940403[318] = 0;
   out_1171520194403940403[319] = 0;
   out_1171520194403940403[320] = 0;
   out_1171520194403940403[321] = 0;
   out_1171520194403940403[322] = 0;
   out_1171520194403940403[323] = 0;
   out_1171520194403940403[324] = 0;
   out_1171520194403940403[325] = 0;
   out_1171520194403940403[326] = 0;
   out_1171520194403940403[327] = 0;
   out_1171520194403940403[328] = 0;
   out_1171520194403940403[329] = 0;
   out_1171520194403940403[330] = 1;
   out_1171520194403940403[331] = 0;
   out_1171520194403940403[332] = 0;
   out_1171520194403940403[333] = 0;
   out_1171520194403940403[334] = 0;
   out_1171520194403940403[335] = 0;
   out_1171520194403940403[336] = 0;
   out_1171520194403940403[337] = 0;
   out_1171520194403940403[338] = 0;
   out_1171520194403940403[339] = 0;
   out_1171520194403940403[340] = 0;
   out_1171520194403940403[341] = 0;
   out_1171520194403940403[342] = 0;
   out_1171520194403940403[343] = 0;
   out_1171520194403940403[344] = 0;
   out_1171520194403940403[345] = 0;
   out_1171520194403940403[346] = 0;
   out_1171520194403940403[347] = 0;
   out_1171520194403940403[348] = 0;
   out_1171520194403940403[349] = 0;
   out_1171520194403940403[350] = 0;
   out_1171520194403940403[351] = 0;
   out_1171520194403940403[352] = 1;
   out_1171520194403940403[353] = 0;
   out_1171520194403940403[354] = 0;
   out_1171520194403940403[355] = 0;
   out_1171520194403940403[356] = 0;
   out_1171520194403940403[357] = 0;
   out_1171520194403940403[358] = 0;
   out_1171520194403940403[359] = 0;
   out_1171520194403940403[360] = 0;
   out_1171520194403940403[361] = 0;
   out_1171520194403940403[362] = 0;
   out_1171520194403940403[363] = 0;
   out_1171520194403940403[364] = 0;
   out_1171520194403940403[365] = 0;
   out_1171520194403940403[366] = 0;
   out_1171520194403940403[367] = 0;
   out_1171520194403940403[368] = 0;
   out_1171520194403940403[369] = 0;
   out_1171520194403940403[370] = 0;
   out_1171520194403940403[371] = 0;
   out_1171520194403940403[372] = 0;
   out_1171520194403940403[373] = 0;
   out_1171520194403940403[374] = 1;
   out_1171520194403940403[375] = 0;
   out_1171520194403940403[376] = 0;
   out_1171520194403940403[377] = 0;
   out_1171520194403940403[378] = 0;
   out_1171520194403940403[379] = 0;
   out_1171520194403940403[380] = 0;
   out_1171520194403940403[381] = 0;
   out_1171520194403940403[382] = 0;
   out_1171520194403940403[383] = 0;
   out_1171520194403940403[384] = 0;
   out_1171520194403940403[385] = 0;
   out_1171520194403940403[386] = 0;
   out_1171520194403940403[387] = 0;
   out_1171520194403940403[388] = 0;
   out_1171520194403940403[389] = 0;
   out_1171520194403940403[390] = 0;
   out_1171520194403940403[391] = 0;
   out_1171520194403940403[392] = 0;
   out_1171520194403940403[393] = 0;
   out_1171520194403940403[394] = 0;
   out_1171520194403940403[395] = 0;
   out_1171520194403940403[396] = 1;
   out_1171520194403940403[397] = 0;
   out_1171520194403940403[398] = 0;
   out_1171520194403940403[399] = 0;
   out_1171520194403940403[400] = 0;
   out_1171520194403940403[401] = 0;
   out_1171520194403940403[402] = 0;
   out_1171520194403940403[403] = 0;
   out_1171520194403940403[404] = 0;
   out_1171520194403940403[405] = 0;
   out_1171520194403940403[406] = 0;
   out_1171520194403940403[407] = 0;
   out_1171520194403940403[408] = 0;
   out_1171520194403940403[409] = 0;
   out_1171520194403940403[410] = 0;
   out_1171520194403940403[411] = 0;
   out_1171520194403940403[412] = 0;
   out_1171520194403940403[413] = 0;
   out_1171520194403940403[414] = 0;
   out_1171520194403940403[415] = 0;
   out_1171520194403940403[416] = 0;
   out_1171520194403940403[417] = 0;
   out_1171520194403940403[418] = 1;
   out_1171520194403940403[419] = 0;
   out_1171520194403940403[420] = 0;
   out_1171520194403940403[421] = 0;
   out_1171520194403940403[422] = 0;
   out_1171520194403940403[423] = 0;
   out_1171520194403940403[424] = 0;
   out_1171520194403940403[425] = 0;
   out_1171520194403940403[426] = 0;
   out_1171520194403940403[427] = 0;
   out_1171520194403940403[428] = 0;
   out_1171520194403940403[429] = 0;
   out_1171520194403940403[430] = 0;
   out_1171520194403940403[431] = 0;
   out_1171520194403940403[432] = 0;
   out_1171520194403940403[433] = 0;
   out_1171520194403940403[434] = 0;
   out_1171520194403940403[435] = 0;
   out_1171520194403940403[436] = 0;
   out_1171520194403940403[437] = 0;
   out_1171520194403940403[438] = 0;
   out_1171520194403940403[439] = 0;
   out_1171520194403940403[440] = 1;
}
void h_4(double *state, double *unused, double *out_772062353137008250) {
   out_772062353137008250[0] = state[10] + state[13];
   out_772062353137008250[1] = state[11] + state[14];
   out_772062353137008250[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_5685240714358944534) {
   out_5685240714358944534[0] = 0;
   out_5685240714358944534[1] = 0;
   out_5685240714358944534[2] = 0;
   out_5685240714358944534[3] = 0;
   out_5685240714358944534[4] = 0;
   out_5685240714358944534[5] = 0;
   out_5685240714358944534[6] = 0;
   out_5685240714358944534[7] = 0;
   out_5685240714358944534[8] = 0;
   out_5685240714358944534[9] = 0;
   out_5685240714358944534[10] = 1;
   out_5685240714358944534[11] = 0;
   out_5685240714358944534[12] = 0;
   out_5685240714358944534[13] = 1;
   out_5685240714358944534[14] = 0;
   out_5685240714358944534[15] = 0;
   out_5685240714358944534[16] = 0;
   out_5685240714358944534[17] = 0;
   out_5685240714358944534[18] = 0;
   out_5685240714358944534[19] = 0;
   out_5685240714358944534[20] = 0;
   out_5685240714358944534[21] = 0;
   out_5685240714358944534[22] = 0;
   out_5685240714358944534[23] = 0;
   out_5685240714358944534[24] = 0;
   out_5685240714358944534[25] = 0;
   out_5685240714358944534[26] = 0;
   out_5685240714358944534[27] = 0;
   out_5685240714358944534[28] = 0;
   out_5685240714358944534[29] = 0;
   out_5685240714358944534[30] = 0;
   out_5685240714358944534[31] = 0;
   out_5685240714358944534[32] = 0;
   out_5685240714358944534[33] = 1;
   out_5685240714358944534[34] = 0;
   out_5685240714358944534[35] = 0;
   out_5685240714358944534[36] = 1;
   out_5685240714358944534[37] = 0;
   out_5685240714358944534[38] = 0;
   out_5685240714358944534[39] = 0;
   out_5685240714358944534[40] = 0;
   out_5685240714358944534[41] = 0;
   out_5685240714358944534[42] = 0;
   out_5685240714358944534[43] = 0;
   out_5685240714358944534[44] = 0;
   out_5685240714358944534[45] = 0;
   out_5685240714358944534[46] = 0;
   out_5685240714358944534[47] = 0;
   out_5685240714358944534[48] = 0;
   out_5685240714358944534[49] = 0;
   out_5685240714358944534[50] = 0;
   out_5685240714358944534[51] = 0;
   out_5685240714358944534[52] = 0;
   out_5685240714358944534[53] = 0;
   out_5685240714358944534[54] = 0;
   out_5685240714358944534[55] = 0;
   out_5685240714358944534[56] = 1;
   out_5685240714358944534[57] = 0;
   out_5685240714358944534[58] = 0;
   out_5685240714358944534[59] = 1;
   out_5685240714358944534[60] = 0;
   out_5685240714358944534[61] = 0;
   out_5685240714358944534[62] = 0;
   out_5685240714358944534[63] = 0;
   out_5685240714358944534[64] = 0;
   out_5685240714358944534[65] = 0;
}
void h_9(double *state, double *unused, double *out_5323728778463845524) {
   out_5323728778463845524[0] = state[10];
   out_5323728778463845524[1] = state[11];
   out_5323728778463845524[2] = state[12];
}
void H_9(double *state, double *unused, double *out_5474284424086159612) {
   out_5474284424086159612[0] = 0;
   out_5474284424086159612[1] = 0;
   out_5474284424086159612[2] = 0;
   out_5474284424086159612[3] = 0;
   out_5474284424086159612[4] = 0;
   out_5474284424086159612[5] = 0;
   out_5474284424086159612[6] = 0;
   out_5474284424086159612[7] = 0;
   out_5474284424086159612[8] = 0;
   out_5474284424086159612[9] = 0;
   out_5474284424086159612[10] = 1;
   out_5474284424086159612[11] = 0;
   out_5474284424086159612[12] = 0;
   out_5474284424086159612[13] = 0;
   out_5474284424086159612[14] = 0;
   out_5474284424086159612[15] = 0;
   out_5474284424086159612[16] = 0;
   out_5474284424086159612[17] = 0;
   out_5474284424086159612[18] = 0;
   out_5474284424086159612[19] = 0;
   out_5474284424086159612[20] = 0;
   out_5474284424086159612[21] = 0;
   out_5474284424086159612[22] = 0;
   out_5474284424086159612[23] = 0;
   out_5474284424086159612[24] = 0;
   out_5474284424086159612[25] = 0;
   out_5474284424086159612[26] = 0;
   out_5474284424086159612[27] = 0;
   out_5474284424086159612[28] = 0;
   out_5474284424086159612[29] = 0;
   out_5474284424086159612[30] = 0;
   out_5474284424086159612[31] = 0;
   out_5474284424086159612[32] = 0;
   out_5474284424086159612[33] = 1;
   out_5474284424086159612[34] = 0;
   out_5474284424086159612[35] = 0;
   out_5474284424086159612[36] = 0;
   out_5474284424086159612[37] = 0;
   out_5474284424086159612[38] = 0;
   out_5474284424086159612[39] = 0;
   out_5474284424086159612[40] = 0;
   out_5474284424086159612[41] = 0;
   out_5474284424086159612[42] = 0;
   out_5474284424086159612[43] = 0;
   out_5474284424086159612[44] = 0;
   out_5474284424086159612[45] = 0;
   out_5474284424086159612[46] = 0;
   out_5474284424086159612[47] = 0;
   out_5474284424086159612[48] = 0;
   out_5474284424086159612[49] = 0;
   out_5474284424086159612[50] = 0;
   out_5474284424086159612[51] = 0;
   out_5474284424086159612[52] = 0;
   out_5474284424086159612[53] = 0;
   out_5474284424086159612[54] = 0;
   out_5474284424086159612[55] = 0;
   out_5474284424086159612[56] = 1;
   out_5474284424086159612[57] = 0;
   out_5474284424086159612[58] = 0;
   out_5474284424086159612[59] = 0;
   out_5474284424086159612[60] = 0;
   out_5474284424086159612[61] = 0;
   out_5474284424086159612[62] = 0;
   out_5474284424086159612[63] = 0;
   out_5474284424086159612[64] = 0;
   out_5474284424086159612[65] = 0;
}
void h_10(double *state, double *unused, double *out_736296095451225427) {
   out_736296095451225427[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_736296095451225427[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_736296095451225427[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_2248528365336139792) {
   out_2248528365336139792[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_2248528365336139792[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_2248528365336139792[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_2248528365336139792[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_2248528365336139792[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_2248528365336139792[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_2248528365336139792[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_2248528365336139792[7] = 0;
   out_2248528365336139792[8] = 0;
   out_2248528365336139792[9] = 0;
   out_2248528365336139792[10] = 0;
   out_2248528365336139792[11] = 0;
   out_2248528365336139792[12] = 0;
   out_2248528365336139792[13] = 0;
   out_2248528365336139792[14] = 0;
   out_2248528365336139792[15] = 0;
   out_2248528365336139792[16] = 1;
   out_2248528365336139792[17] = 0;
   out_2248528365336139792[18] = 0;
   out_2248528365336139792[19] = 1;
   out_2248528365336139792[20] = 0;
   out_2248528365336139792[21] = 0;
   out_2248528365336139792[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_2248528365336139792[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_2248528365336139792[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_2248528365336139792[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_2248528365336139792[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_2248528365336139792[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_2248528365336139792[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_2248528365336139792[29] = 0;
   out_2248528365336139792[30] = 0;
   out_2248528365336139792[31] = 0;
   out_2248528365336139792[32] = 0;
   out_2248528365336139792[33] = 0;
   out_2248528365336139792[34] = 0;
   out_2248528365336139792[35] = 0;
   out_2248528365336139792[36] = 0;
   out_2248528365336139792[37] = 0;
   out_2248528365336139792[38] = 0;
   out_2248528365336139792[39] = 1;
   out_2248528365336139792[40] = 0;
   out_2248528365336139792[41] = 0;
   out_2248528365336139792[42] = 1;
   out_2248528365336139792[43] = 0;
   out_2248528365336139792[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_2248528365336139792[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_2248528365336139792[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_2248528365336139792[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_2248528365336139792[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_2248528365336139792[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_2248528365336139792[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_2248528365336139792[51] = 0;
   out_2248528365336139792[52] = 0;
   out_2248528365336139792[53] = 0;
   out_2248528365336139792[54] = 0;
   out_2248528365336139792[55] = 0;
   out_2248528365336139792[56] = 0;
   out_2248528365336139792[57] = 0;
   out_2248528365336139792[58] = 0;
   out_2248528365336139792[59] = 0;
   out_2248528365336139792[60] = 0;
   out_2248528365336139792[61] = 0;
   out_2248528365336139792[62] = 1;
   out_2248528365336139792[63] = 0;
   out_2248528365336139792[64] = 0;
   out_2248528365336139792[65] = 1;
}
void h_12(double *state, double *unused, double *out_1347916463491024439) {
   out_1347916463491024439[0] = state[0];
   out_1347916463491024439[1] = state[1];
   out_1347916463491024439[2] = state[2];
}
void H_12(double *state, double *unused, double *out_696017662683788462) {
   out_696017662683788462[0] = 1;
   out_696017662683788462[1] = 0;
   out_696017662683788462[2] = 0;
   out_696017662683788462[3] = 0;
   out_696017662683788462[4] = 0;
   out_696017662683788462[5] = 0;
   out_696017662683788462[6] = 0;
   out_696017662683788462[7] = 0;
   out_696017662683788462[8] = 0;
   out_696017662683788462[9] = 0;
   out_696017662683788462[10] = 0;
   out_696017662683788462[11] = 0;
   out_696017662683788462[12] = 0;
   out_696017662683788462[13] = 0;
   out_696017662683788462[14] = 0;
   out_696017662683788462[15] = 0;
   out_696017662683788462[16] = 0;
   out_696017662683788462[17] = 0;
   out_696017662683788462[18] = 0;
   out_696017662683788462[19] = 0;
   out_696017662683788462[20] = 0;
   out_696017662683788462[21] = 0;
   out_696017662683788462[22] = 0;
   out_696017662683788462[23] = 1;
   out_696017662683788462[24] = 0;
   out_696017662683788462[25] = 0;
   out_696017662683788462[26] = 0;
   out_696017662683788462[27] = 0;
   out_696017662683788462[28] = 0;
   out_696017662683788462[29] = 0;
   out_696017662683788462[30] = 0;
   out_696017662683788462[31] = 0;
   out_696017662683788462[32] = 0;
   out_696017662683788462[33] = 0;
   out_696017662683788462[34] = 0;
   out_696017662683788462[35] = 0;
   out_696017662683788462[36] = 0;
   out_696017662683788462[37] = 0;
   out_696017662683788462[38] = 0;
   out_696017662683788462[39] = 0;
   out_696017662683788462[40] = 0;
   out_696017662683788462[41] = 0;
   out_696017662683788462[42] = 0;
   out_696017662683788462[43] = 0;
   out_696017662683788462[44] = 0;
   out_696017662683788462[45] = 0;
   out_696017662683788462[46] = 1;
   out_696017662683788462[47] = 0;
   out_696017662683788462[48] = 0;
   out_696017662683788462[49] = 0;
   out_696017662683788462[50] = 0;
   out_696017662683788462[51] = 0;
   out_696017662683788462[52] = 0;
   out_696017662683788462[53] = 0;
   out_696017662683788462[54] = 0;
   out_696017662683788462[55] = 0;
   out_696017662683788462[56] = 0;
   out_696017662683788462[57] = 0;
   out_696017662683788462[58] = 0;
   out_696017662683788462[59] = 0;
   out_696017662683788462[60] = 0;
   out_696017662683788462[61] = 0;
   out_696017662683788462[62] = 0;
   out_696017662683788462[63] = 0;
   out_696017662683788462[64] = 0;
   out_696017662683788462[65] = 0;
}
void h_35(double *state, double *unused, double *out_5698654690754227408) {
   out_5698654690754227408[0] = state[7];
   out_5698654690754227408[1] = state[8];
   out_5698654690754227408[2] = state[9];
}
void H_35(double *state, double *unused, double *out_9051902771731551910) {
   out_9051902771731551910[0] = 0;
   out_9051902771731551910[1] = 0;
   out_9051902771731551910[2] = 0;
   out_9051902771731551910[3] = 0;
   out_9051902771731551910[4] = 0;
   out_9051902771731551910[5] = 0;
   out_9051902771731551910[6] = 0;
   out_9051902771731551910[7] = 1;
   out_9051902771731551910[8] = 0;
   out_9051902771731551910[9] = 0;
   out_9051902771731551910[10] = 0;
   out_9051902771731551910[11] = 0;
   out_9051902771731551910[12] = 0;
   out_9051902771731551910[13] = 0;
   out_9051902771731551910[14] = 0;
   out_9051902771731551910[15] = 0;
   out_9051902771731551910[16] = 0;
   out_9051902771731551910[17] = 0;
   out_9051902771731551910[18] = 0;
   out_9051902771731551910[19] = 0;
   out_9051902771731551910[20] = 0;
   out_9051902771731551910[21] = 0;
   out_9051902771731551910[22] = 0;
   out_9051902771731551910[23] = 0;
   out_9051902771731551910[24] = 0;
   out_9051902771731551910[25] = 0;
   out_9051902771731551910[26] = 0;
   out_9051902771731551910[27] = 0;
   out_9051902771731551910[28] = 0;
   out_9051902771731551910[29] = 0;
   out_9051902771731551910[30] = 1;
   out_9051902771731551910[31] = 0;
   out_9051902771731551910[32] = 0;
   out_9051902771731551910[33] = 0;
   out_9051902771731551910[34] = 0;
   out_9051902771731551910[35] = 0;
   out_9051902771731551910[36] = 0;
   out_9051902771731551910[37] = 0;
   out_9051902771731551910[38] = 0;
   out_9051902771731551910[39] = 0;
   out_9051902771731551910[40] = 0;
   out_9051902771731551910[41] = 0;
   out_9051902771731551910[42] = 0;
   out_9051902771731551910[43] = 0;
   out_9051902771731551910[44] = 0;
   out_9051902771731551910[45] = 0;
   out_9051902771731551910[46] = 0;
   out_9051902771731551910[47] = 0;
   out_9051902771731551910[48] = 0;
   out_9051902771731551910[49] = 0;
   out_9051902771731551910[50] = 0;
   out_9051902771731551910[51] = 0;
   out_9051902771731551910[52] = 0;
   out_9051902771731551910[53] = 1;
   out_9051902771731551910[54] = 0;
   out_9051902771731551910[55] = 0;
   out_9051902771731551910[56] = 0;
   out_9051902771731551910[57] = 0;
   out_9051902771731551910[58] = 0;
   out_9051902771731551910[59] = 0;
   out_9051902771731551910[60] = 0;
   out_9051902771731551910[61] = 0;
   out_9051902771731551910[62] = 0;
   out_9051902771731551910[63] = 0;
   out_9051902771731551910[64] = 0;
   out_9051902771731551910[65] = 0;
}
void h_32(double *state, double *unused, double *out_6619486108574102812) {
   out_6619486108574102812[0] = state[3];
   out_6619486108574102812[1] = state[4];
   out_6619486108574102812[2] = state[5];
   out_6619486108574102812[3] = state[6];
}
void H_32(double *state, double *unused, double *out_9183067556672292379) {
   out_9183067556672292379[0] = 0;
   out_9183067556672292379[1] = 0;
   out_9183067556672292379[2] = 0;
   out_9183067556672292379[3] = 1;
   out_9183067556672292379[4] = 0;
   out_9183067556672292379[5] = 0;
   out_9183067556672292379[6] = 0;
   out_9183067556672292379[7] = 0;
   out_9183067556672292379[8] = 0;
   out_9183067556672292379[9] = 0;
   out_9183067556672292379[10] = 0;
   out_9183067556672292379[11] = 0;
   out_9183067556672292379[12] = 0;
   out_9183067556672292379[13] = 0;
   out_9183067556672292379[14] = 0;
   out_9183067556672292379[15] = 0;
   out_9183067556672292379[16] = 0;
   out_9183067556672292379[17] = 0;
   out_9183067556672292379[18] = 0;
   out_9183067556672292379[19] = 0;
   out_9183067556672292379[20] = 0;
   out_9183067556672292379[21] = 0;
   out_9183067556672292379[22] = 0;
   out_9183067556672292379[23] = 0;
   out_9183067556672292379[24] = 0;
   out_9183067556672292379[25] = 0;
   out_9183067556672292379[26] = 1;
   out_9183067556672292379[27] = 0;
   out_9183067556672292379[28] = 0;
   out_9183067556672292379[29] = 0;
   out_9183067556672292379[30] = 0;
   out_9183067556672292379[31] = 0;
   out_9183067556672292379[32] = 0;
   out_9183067556672292379[33] = 0;
   out_9183067556672292379[34] = 0;
   out_9183067556672292379[35] = 0;
   out_9183067556672292379[36] = 0;
   out_9183067556672292379[37] = 0;
   out_9183067556672292379[38] = 0;
   out_9183067556672292379[39] = 0;
   out_9183067556672292379[40] = 0;
   out_9183067556672292379[41] = 0;
   out_9183067556672292379[42] = 0;
   out_9183067556672292379[43] = 0;
   out_9183067556672292379[44] = 0;
   out_9183067556672292379[45] = 0;
   out_9183067556672292379[46] = 0;
   out_9183067556672292379[47] = 0;
   out_9183067556672292379[48] = 0;
   out_9183067556672292379[49] = 1;
   out_9183067556672292379[50] = 0;
   out_9183067556672292379[51] = 0;
   out_9183067556672292379[52] = 0;
   out_9183067556672292379[53] = 0;
   out_9183067556672292379[54] = 0;
   out_9183067556672292379[55] = 0;
   out_9183067556672292379[56] = 0;
   out_9183067556672292379[57] = 0;
   out_9183067556672292379[58] = 0;
   out_9183067556672292379[59] = 0;
   out_9183067556672292379[60] = 0;
   out_9183067556672292379[61] = 0;
   out_9183067556672292379[62] = 0;
   out_9183067556672292379[63] = 0;
   out_9183067556672292379[64] = 0;
   out_9183067556672292379[65] = 0;
   out_9183067556672292379[66] = 0;
   out_9183067556672292379[67] = 0;
   out_9183067556672292379[68] = 0;
   out_9183067556672292379[69] = 0;
   out_9183067556672292379[70] = 0;
   out_9183067556672292379[71] = 0;
   out_9183067556672292379[72] = 1;
   out_9183067556672292379[73] = 0;
   out_9183067556672292379[74] = 0;
   out_9183067556672292379[75] = 0;
   out_9183067556672292379[76] = 0;
   out_9183067556672292379[77] = 0;
   out_9183067556672292379[78] = 0;
   out_9183067556672292379[79] = 0;
   out_9183067556672292379[80] = 0;
   out_9183067556672292379[81] = 0;
   out_9183067556672292379[82] = 0;
   out_9183067556672292379[83] = 0;
   out_9183067556672292379[84] = 0;
   out_9183067556672292379[85] = 0;
   out_9183067556672292379[86] = 0;
   out_9183067556672292379[87] = 0;
}
void h_13(double *state, double *unused, double *out_4193743935506485275) {
   out_4193743935506485275[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_4193743935506485275[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_4193743935506485275[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_1674154273183340047) {
   out_1674154273183340047[0] = 0;
   out_1674154273183340047[1] = 0;
   out_1674154273183340047[2] = 0;
   out_1674154273183340047[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_1674154273183340047[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_1674154273183340047[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_1674154273183340047[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_1674154273183340047[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_1674154273183340047[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_1674154273183340047[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_1674154273183340047[10] = 0;
   out_1674154273183340047[11] = 0;
   out_1674154273183340047[12] = 0;
   out_1674154273183340047[13] = 0;
   out_1674154273183340047[14] = 0;
   out_1674154273183340047[15] = 0;
   out_1674154273183340047[16] = 0;
   out_1674154273183340047[17] = 0;
   out_1674154273183340047[18] = 0;
   out_1674154273183340047[19] = 0;
   out_1674154273183340047[20] = 0;
   out_1674154273183340047[21] = 0;
   out_1674154273183340047[22] = 0;
   out_1674154273183340047[23] = 0;
   out_1674154273183340047[24] = 0;
   out_1674154273183340047[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_1674154273183340047[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_1674154273183340047[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_1674154273183340047[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_1674154273183340047[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_1674154273183340047[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_1674154273183340047[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_1674154273183340047[32] = 0;
   out_1674154273183340047[33] = 0;
   out_1674154273183340047[34] = 0;
   out_1674154273183340047[35] = 0;
   out_1674154273183340047[36] = 0;
   out_1674154273183340047[37] = 0;
   out_1674154273183340047[38] = 0;
   out_1674154273183340047[39] = 0;
   out_1674154273183340047[40] = 0;
   out_1674154273183340047[41] = 0;
   out_1674154273183340047[42] = 0;
   out_1674154273183340047[43] = 0;
   out_1674154273183340047[44] = 0;
   out_1674154273183340047[45] = 0;
   out_1674154273183340047[46] = 0;
   out_1674154273183340047[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_1674154273183340047[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_1674154273183340047[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_1674154273183340047[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_1674154273183340047[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_1674154273183340047[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_1674154273183340047[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_1674154273183340047[54] = 0;
   out_1674154273183340047[55] = 0;
   out_1674154273183340047[56] = 0;
   out_1674154273183340047[57] = 0;
   out_1674154273183340047[58] = 0;
   out_1674154273183340047[59] = 0;
   out_1674154273183340047[60] = 0;
   out_1674154273183340047[61] = 0;
   out_1674154273183340047[62] = 0;
   out_1674154273183340047[63] = 0;
   out_1674154273183340047[64] = 0;
   out_1674154273183340047[65] = 0;
}
void h_14(double *state, double *unused, double *out_5323728778463845524) {
   out_5323728778463845524[0] = state[10];
   out_5323728778463845524[1] = state[11];
   out_5323728778463845524[2] = state[12];
}
void H_14(double *state, double *unused, double *out_5474284424086159612) {
   out_5474284424086159612[0] = 0;
   out_5474284424086159612[1] = 0;
   out_5474284424086159612[2] = 0;
   out_5474284424086159612[3] = 0;
   out_5474284424086159612[4] = 0;
   out_5474284424086159612[5] = 0;
   out_5474284424086159612[6] = 0;
   out_5474284424086159612[7] = 0;
   out_5474284424086159612[8] = 0;
   out_5474284424086159612[9] = 0;
   out_5474284424086159612[10] = 1;
   out_5474284424086159612[11] = 0;
   out_5474284424086159612[12] = 0;
   out_5474284424086159612[13] = 0;
   out_5474284424086159612[14] = 0;
   out_5474284424086159612[15] = 0;
   out_5474284424086159612[16] = 0;
   out_5474284424086159612[17] = 0;
   out_5474284424086159612[18] = 0;
   out_5474284424086159612[19] = 0;
   out_5474284424086159612[20] = 0;
   out_5474284424086159612[21] = 0;
   out_5474284424086159612[22] = 0;
   out_5474284424086159612[23] = 0;
   out_5474284424086159612[24] = 0;
   out_5474284424086159612[25] = 0;
   out_5474284424086159612[26] = 0;
   out_5474284424086159612[27] = 0;
   out_5474284424086159612[28] = 0;
   out_5474284424086159612[29] = 0;
   out_5474284424086159612[30] = 0;
   out_5474284424086159612[31] = 0;
   out_5474284424086159612[32] = 0;
   out_5474284424086159612[33] = 1;
   out_5474284424086159612[34] = 0;
   out_5474284424086159612[35] = 0;
   out_5474284424086159612[36] = 0;
   out_5474284424086159612[37] = 0;
   out_5474284424086159612[38] = 0;
   out_5474284424086159612[39] = 0;
   out_5474284424086159612[40] = 0;
   out_5474284424086159612[41] = 0;
   out_5474284424086159612[42] = 0;
   out_5474284424086159612[43] = 0;
   out_5474284424086159612[44] = 0;
   out_5474284424086159612[45] = 0;
   out_5474284424086159612[46] = 0;
   out_5474284424086159612[47] = 0;
   out_5474284424086159612[48] = 0;
   out_5474284424086159612[49] = 0;
   out_5474284424086159612[50] = 0;
   out_5474284424086159612[51] = 0;
   out_5474284424086159612[52] = 0;
   out_5474284424086159612[53] = 0;
   out_5474284424086159612[54] = 0;
   out_5474284424086159612[55] = 0;
   out_5474284424086159612[56] = 1;
   out_5474284424086159612[57] = 0;
   out_5474284424086159612[58] = 0;
   out_5474284424086159612[59] = 0;
   out_5474284424086159612[60] = 0;
   out_5474284424086159612[61] = 0;
   out_5474284424086159612[62] = 0;
   out_5474284424086159612[63] = 0;
   out_5474284424086159612[64] = 0;
   out_5474284424086159612[65] = 0;
}
void h_33(double *state, double *unused, double *out_3308212013704557851) {
   out_3308212013704557851[0] = state[16];
   out_3308212013704557851[1] = state[17];
   out_3308212013704557851[2] = state[18];
}
void H_33(double *state, double *unused, double *out_6244284297339142102) {
   out_6244284297339142102[0] = 0;
   out_6244284297339142102[1] = 0;
   out_6244284297339142102[2] = 0;
   out_6244284297339142102[3] = 0;
   out_6244284297339142102[4] = 0;
   out_6244284297339142102[5] = 0;
   out_6244284297339142102[6] = 0;
   out_6244284297339142102[7] = 0;
   out_6244284297339142102[8] = 0;
   out_6244284297339142102[9] = 0;
   out_6244284297339142102[10] = 0;
   out_6244284297339142102[11] = 0;
   out_6244284297339142102[12] = 0;
   out_6244284297339142102[13] = 0;
   out_6244284297339142102[14] = 0;
   out_6244284297339142102[15] = 0;
   out_6244284297339142102[16] = 1;
   out_6244284297339142102[17] = 0;
   out_6244284297339142102[18] = 0;
   out_6244284297339142102[19] = 0;
   out_6244284297339142102[20] = 0;
   out_6244284297339142102[21] = 0;
   out_6244284297339142102[22] = 0;
   out_6244284297339142102[23] = 0;
   out_6244284297339142102[24] = 0;
   out_6244284297339142102[25] = 0;
   out_6244284297339142102[26] = 0;
   out_6244284297339142102[27] = 0;
   out_6244284297339142102[28] = 0;
   out_6244284297339142102[29] = 0;
   out_6244284297339142102[30] = 0;
   out_6244284297339142102[31] = 0;
   out_6244284297339142102[32] = 0;
   out_6244284297339142102[33] = 0;
   out_6244284297339142102[34] = 0;
   out_6244284297339142102[35] = 0;
   out_6244284297339142102[36] = 0;
   out_6244284297339142102[37] = 0;
   out_6244284297339142102[38] = 0;
   out_6244284297339142102[39] = 1;
   out_6244284297339142102[40] = 0;
   out_6244284297339142102[41] = 0;
   out_6244284297339142102[42] = 0;
   out_6244284297339142102[43] = 0;
   out_6244284297339142102[44] = 0;
   out_6244284297339142102[45] = 0;
   out_6244284297339142102[46] = 0;
   out_6244284297339142102[47] = 0;
   out_6244284297339142102[48] = 0;
   out_6244284297339142102[49] = 0;
   out_6244284297339142102[50] = 0;
   out_6244284297339142102[51] = 0;
   out_6244284297339142102[52] = 0;
   out_6244284297339142102[53] = 0;
   out_6244284297339142102[54] = 0;
   out_6244284297339142102[55] = 0;
   out_6244284297339142102[56] = 0;
   out_6244284297339142102[57] = 0;
   out_6244284297339142102[58] = 0;
   out_6244284297339142102[59] = 0;
   out_6244284297339142102[60] = 0;
   out_6244284297339142102[61] = 0;
   out_6244284297339142102[62] = 1;
   out_6244284297339142102[63] = 0;
   out_6244284297339142102[64] = 0;
   out_6244284297339142102[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_35(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_35, H_35, NULL, in_z, in_R, in_ea, MAHA_THRESH_35);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_2371134415192855578) {
  H(in_vec, out_2371134415192855578);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_8346643765801733285) {
  err_fun(nom_x, delta_x, out_8346643765801733285);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_7659926232156838011) {
  inv_err_fun(nom_x, true_x, out_7659926232156838011);
}
void live_H_mod_fun(double *state, double *out_2316424480753417441) {
  H_mod_fun(state, out_2316424480753417441);
}
void live_f_fun(double *state, double dt, double *out_4391588121978318731) {
  f_fun(state,  dt, out_4391588121978318731);
}
void live_F_fun(double *state, double dt, double *out_1171520194403940403) {
  F_fun(state,  dt, out_1171520194403940403);
}
void live_h_4(double *state, double *unused, double *out_772062353137008250) {
  h_4(state, unused, out_772062353137008250);
}
void live_H_4(double *state, double *unused, double *out_5685240714358944534) {
  H_4(state, unused, out_5685240714358944534);
}
void live_h_9(double *state, double *unused, double *out_5323728778463845524) {
  h_9(state, unused, out_5323728778463845524);
}
void live_H_9(double *state, double *unused, double *out_5474284424086159612) {
  H_9(state, unused, out_5474284424086159612);
}
void live_h_10(double *state, double *unused, double *out_736296095451225427) {
  h_10(state, unused, out_736296095451225427);
}
void live_H_10(double *state, double *unused, double *out_2248528365336139792) {
  H_10(state, unused, out_2248528365336139792);
}
void live_h_12(double *state, double *unused, double *out_1347916463491024439) {
  h_12(state, unused, out_1347916463491024439);
}
void live_H_12(double *state, double *unused, double *out_696017662683788462) {
  H_12(state, unused, out_696017662683788462);
}
void live_h_35(double *state, double *unused, double *out_5698654690754227408) {
  h_35(state, unused, out_5698654690754227408);
}
void live_H_35(double *state, double *unused, double *out_9051902771731551910) {
  H_35(state, unused, out_9051902771731551910);
}
void live_h_32(double *state, double *unused, double *out_6619486108574102812) {
  h_32(state, unused, out_6619486108574102812);
}
void live_H_32(double *state, double *unused, double *out_9183067556672292379) {
  H_32(state, unused, out_9183067556672292379);
}
void live_h_13(double *state, double *unused, double *out_4193743935506485275) {
  h_13(state, unused, out_4193743935506485275);
}
void live_H_13(double *state, double *unused, double *out_1674154273183340047) {
  H_13(state, unused, out_1674154273183340047);
}
void live_h_14(double *state, double *unused, double *out_5323728778463845524) {
  h_14(state, unused, out_5323728778463845524);
}
void live_H_14(double *state, double *unused, double *out_5474284424086159612) {
  H_14(state, unused, out_5474284424086159612);
}
void live_h_33(double *state, double *unused, double *out_3308212013704557851) {
  h_33(state, unused, out_3308212013704557851);
}
void live_H_33(double *state, double *unused, double *out_6244284297339142102) {
  H_33(state, unused, out_6244284297339142102);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 35, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 35, live_h_35 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 35, live_H_35 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 35, live_update_35 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_init(live);
